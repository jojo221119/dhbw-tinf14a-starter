buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'api'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyWarPackage(type: Copy, dependsOn: build) {
	// Create a copy of rest war package
	from 'build/libs/api.war'
	into 'build/libs/tomcat'
}

task deployIntegration(type: Copy, dependsOn: copyWarPackage) {
	// First rename to ROOT.war
	file('build/libs/tomcat/api.war').renameTo(file('deploy/ROOT.war'))
	// ..before deploying to tomcat webapp folder
	from 'build/libs/tomcat/ROOT.war'
	into 'deploy'
}

task undeployIntegration(type: Delete) {
	delete 'deploy/ROOT.war'
}